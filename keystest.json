[
	{ "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0'"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true }, { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true }, { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true } ] },
	{ "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'${0:$SELECTION}'"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true } ] },
	{ "keys": ["'"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }, { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true }, { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true }, ] },
	{ "keys": ["("], "command": "insert_snippet", "args": {"contents": "($0)"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true } ] },
	{ "keys": ["("], "command": "insert_snippet", "args": {"contents": "(${0:$SELECTION})"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true } ] },
	{ "keys": [")"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true } ] },
	{ "keys": ["/"], "command": "close_tag", "args": { "insert_slash": true }, "context": [{ "key": "selector", "operator": "equal", "operand": "(text.html, text.xml) - string - comment", "match_all": true }, { "key": "preceding_text", "operator": "regex_match", "operand": ".*<$", "match_all": true }, { "key": "setting.auto_close_tags" } ] },
	{ "keys": ["["], "command": "insert_snippet", "args": {"contents": "[$0]"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true } ] },
	{ "keys": ["["], "command": "insert_snippet", "args": {"contents": "[${0:$SELECTION}]"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true } ] },
	{ "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"$0\""}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true }, { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true }, { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true } ] }, { "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"${0:$SELECTION}\""}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true } ] },
	{ "keys": ["\""], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true }, { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true }, { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }, ] },
	{ "keys": ["]"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true } ] },
	{ "keys": ["alt+-"], "command": "jump_back" },
	{ "keys": ["alt+."], "command": "close_tag" },
	{ "keys": ["alt+0"], "command": "select_by_index", "args": { "index": 9 } },
	{ "keys": ["alt+1"], "command": "select_by_index", "args": { "index": 0 } },
	{ "keys": ["alt+2"], "command": "select_by_index", "args": { "index": 1 } },
	{ "keys": ["alt+3"], "command": "select_by_index", "args": { "index": 2 } },
	{ "keys": ["alt+4"], "command": "select_by_index", "args": { "index": 3 } },
	{ "keys": ["alt+5"], "command": "select_by_index", "args": { "index": 4 } },
	{ "keys": ["alt+6"], "command": "select_by_index", "args": { "index": 5 } },
	{ "keys": ["alt+7"], "command": "select_by_index", "args": { "index": 6 } },
	{ "keys": ["alt+8"], "command": "select_by_index", "args": { "index": 7 } },
	{ "keys": ["alt+9"], "command": "select_by_index", "args": { "index": 8 } },
	{ "keys": ["alt+\\"], "command": "user_test"},
	{ "keys": ["alt+`"], "command": "toggle_terminus_panel", "args": {"config_name": "Linux", "panel_name": "Linux Terminal", "cwd": "${file_path:${folder}}"} },
	{ "keys": ["alt+a"], "command": "toggle_preserve_case", "context": [{ "key": "setting.is_widget", "operator": "equal", "operand": true } ] },
	{ "keys": ["alt+c"], "command": "toggle_case_sensitive", "context": [{ "key": "setting.is_widget", "operator": "equal", "operand": true } ] },
	{ "keys": ["alt+c"], "command": "toggle_snake_camel_pascal"},
	{ "keys": ["alt+context_menu"], "command": "open_unity_project"},
	{ "keys": ["alt+delete"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete Line.sublime-macro"} },
	{ "keys": ["alt+down"], "command": "swap_down_with_indent"},
	{ "keys": ["alt+enter"], "command": "find_all", "args": {"close_panel": true}, "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}] },
	{ "keys": ["alt+enter"], "command": "find_all", "args": {"close_panel": true}, "context": [{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}] },
	{ "keys": ["alt+enter"], "command": "find_all", "args": {"close_panel": true}, "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
	{ "keys": ["alt+enter"], "command": "find_all", "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}] },
	{ "keys": ["alt+f2"], "command": "select_all_bookmarks" },
	{ "keys": ["alt+f3"], "command": "find_all_under" },
	{ "keys": ["alt+keypad_minus"], "command": "jump_back" },
	{ "keys": ["alt+l"], "command": "move_to", "args": { "to": "eol", "extend": true } },
	{ "keys": ["alt+left"], "command": "move", "args": {"by": "subwords", "forward": false} },
	{ "keys": ["alt+n"], "command": "smooth_new"},
	{ "keys": ["alt+o"], "command": "prompt_select_workspace"},
	{ "keys": ["alt+o"], "command": "switch_file", "args": {"extensions": ["cpp", "cxx", "cc", "c", "hpp", "hxx", "hh", "h", "ipp", "inl", "m", "mm"]} },
	{ "keys": ["alt+p"], "command": "menu_open_from_current_dir"},
	{ "keys": ["alt+q"], "command": "wrap_lines" },
	{ "keys": ["alt+r"], "command": "rename_file"},
	{ "keys": ["alt+r"], "command": "toggle_regex", "context": [{ "key": "setting.is_widget", "operator": "equal", "operand": true } ] },
	{ "keys": ["alt+right"], "command": "move", "args": {"by": "subword_ends", "forward": true} },
	{ "keys": ["alt+shift+-"], "command": "jump_forward" },
	{ "keys": ["alt+shift+1"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 1.0], "cells": [[0, 0, 1, 1]] } },
	{ "keys": ["alt+shift+2"], "command": "set_layout", "args": {"cols": [0.0, 0.5, 1.0], "rows": [0.0, 1.0], "cells": [[0, 0, 1, 1], [1, 0, 2, 1]] } },
	{ "keys": ["alt+shift+3"], "command": "set_layout", "args": {"cols": [0.0, 0.33, 0.66, 1.0], "rows": [0.0, 1.0], "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]] } },
	{ "keys": ["alt+shift+4"], "command": "set_layout", "args": {"cols": [0.0, 0.25, 0.5, 0.75, 1.0], "rows": [0.0, 1.0], "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1], [3, 0, 4, 1]] } },
	{ "keys": ["alt+shift+5"], "command": "set_layout", "args": {"cols": [0.0, 0.5, 1.0], "rows": [0.0, 0.5, 1.0], "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [0, 1, 1, 2], [1, 1, 2, 2] ] } },
	{ "keys": ["alt+shift+6"], "command": "set_layout", "args": {"cols": [0.0, 0.6, 1.0], "rows": [0.0, 0.6, 1.0], "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [0, 1, 2, 2] ] } },
	{ "keys": ["alt+shift+7"], "command": "set_layout", "args": {"cols": [0.0, 0.6, 1.0], "rows": [0.0, 0.6, 1.0], "cells": [[0, 0, 2, 1], [0, 1, 1, 2], [1, 1, 2, 2] ] } },
	{ "keys": ["alt+shift+8"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 0.5, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 1, 2]] } },
	{ "keys": ["alt+shift+9"], "command": "set_layout", "args": {"cols": [0.0, 1.0], "rows": [0.0, 0.33, 0.66, 1.0], "cells": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]] } },
	{ "keys": ["alt+shift+`"], "command": "terminus_open", "args": {"config_name": "Linux", "panel_name": "Linux Terminal", "cwd": "${file_path:${folder}}"} },
	{ "keys": ["alt+shift+c"], "command": "toggle_all_cases"},
	{ "keys": ["alt+shift+down"], "command": "run_macro_file", "args": { "file": "Packages/User/Macros/copy_lines_down.sublime-macro"} },
	{ "keys": ["alt+shift+keypad_minus"], "command": "jump_forward" },
	{ "keys": ["alt+shift+left"], "command": "move", "args": {"by": "subwords", "forward": false, "extend": true} },
	{ "keys": ["alt+shift+r"], "command": "lsp_symbol_rename", "context": [{ "key": "setting.lsp_active"}] },
	{ "keys": ["alt+shift+right"], "command": "move", "args": {"by": "subword_ends", "forward": true, "extend": true} },
	{ "keys": ["alt+shift+up"], "command": "run_macro_file", "args": { "file": "Packages/User/Macros/copy_lines_up.sublime-macro"} },
	{ "keys": ["alt+shift+w"], "command": "insert_snippet", "args": { "name": "Packages/XML/Snippets/long-tag.sublime-snippet" } },
	{ "keys": ["alt+space"], "command": "csv_select_col", "context": [{"key": "selector", "operator": "equal", "operand": "text.advanced_csv"} ] },
	{ "keys": ["alt+space"], "command": "expand_selection", "args": { "to": "scope"} },
	{ "keys": ["alt+t"], "command": "transpose"},
	{ "keys": ["alt+up"], "command": "swap_up_with_indent"},
	{ "keys": ["alt+w"], "command": "toggle_whole_word", "context": [{ "key": "setting.is_widget", "operator": "equal", "operand": true } ] },
	{ "keys": ["alt+z"], "command": "revert_modification"},
	{ "keys": ["backspace"], "command": "left_delete" },
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": "'$", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }, { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true }, { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true }, ] },
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": "\"$", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true }, { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true }, { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }, ] },
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true } ] },
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": "\\[$", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true } ] },
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true } ] },
	{ "keys": ["context_menu"], "command": "context_menu" },
	{ "keys": ["context_menu"], "command": "menu_file_commands" },
	{ "keys": ["ctrl++"], "command": "increase_font_size" },
	{ "keys": ["ctrl+,"], "command": "prev_modification" },
	{ "keys": ["ctrl+-"], "command": "decrease_font_size" },
	{ "keys": ["ctrl+."], "command": "lsp_code_actions", "context": [{ "key": "setting.lsp_active"}] },
	{ "keys": ["ctrl+."], "command": "next_modification" },
	{ "keys": ["ctrl+/"], "command": "toggle_comment", "args": { "block": false } },
	{ "keys": ["ctrl+0"], "command": "focus_side_bar" },
	{ "keys": ["ctrl+1"], "command": "focus_group", "args": { "group": 0 } },
	{ "keys": ["ctrl+2"], "command": "focus_group", "args": { "group": 1 } },
	{ "keys": ["ctrl+3"], "command": "focus_group", "args": { "group": 2 } },
	{ "keys": ["ctrl+4"], "command": "focus_group", "args": { "group": 3 } },
	{ "keys": ["ctrl+5"], "command": "focus_group", "args": { "group": 4 } },
	{ "keys": ["ctrl+6"], "command": "focus_group", "args": { "group": 5 } },
	{ "keys": ["ctrl+7"], "command": "focus_group", "args": { "group": 6 } },
	{ "keys": ["ctrl+8"], "command": "focus_group", "args": { "group": 7 } },
	{ "keys": ["ctrl+9"], "command": "focus_group", "args": { "group": 8 } },
	{ "keys": ["ctrl+;"], "command": "show_overlay", "args": {"overlay": "goto", "text": "#"} },
	{ "keys": ["ctrl+="], "command": "increase_font_size" },
	{ "keys": ["ctrl+["], "command": "unindent" },
	{ "keys": ["ctrl+\\"], "command": "toggle_inline_diff"},
	{ "keys": ["ctrl+]"], "command": "indent" },
	{ "keys": ["ctrl+`"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },
	{ "keys": ["ctrl+a"], "command": "select_all" },
	{ "keys": ["ctrl+alt+down"], "command": "select_lines", "args": {"forward": true} },
	{ "keys": ["ctrl+alt+enter"], "command": "replace_all", "args": {"close_panel": true}, "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
	{ "keys": ["ctrl+alt+enter"], "command": "replace_all", "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}] },
	{ "keys": ["ctrl+alt+enter"], "command": "run_on_terminal", "args": { "terminal": "Linux"}, "context": [{ "key": "selector", "operator": "equal", "operand": "source.python"} ] },
	{ "keys": ["ctrl+alt+g"], "command": "anaconda_goto", "context": [{ "key": "selector", "operator": "equal", "operand": "source.python"} ] },
	{ "keys": ["ctrl+alt+shift+p"], "command": "show_scope_name" },
	{ "keys": ["ctrl+alt+super+["], "command": "bh_key", "args": {"plugin": { "type": ["__all__"], "command": "bh_modules.foldbracket"} } },
	{ "keys": ["ctrl+alt+super+b"], "command": "bh_key", "args": { "lines": true } },
	{ "keys": ["ctrl+alt+super+d"], "command": "bh_key", "args": {"no_outside_adj": null, "lines": true, "plugin": {"type": ["__all__"], "command": "bh_modules.bracketselect", "args": { "always_include_brackets": true } } } },
	{ "keys": ["ctrl+alt+super+down"], "command": "bh_key", "args": {"no_outside_adj": null, "no_block_mode": null, "lines": true, "plugin": {"type": ["__all__"], "command": "bh_modules.bracketselect", "args": { "select": "right"} } } },
	{ "keys": ["ctrl+alt+super+e"], "command": "bh_toggle_enable"},
	{ "keys": ["ctrl+alt+super+e"], "command": "swap_brackets"},
	{ "keys": ["ctrl+alt+super+left"], "command": "bh_key", "args": {"plugin": {"type": ["cfml", "html", "angle"], "command": "bh_modules.tagattrselect", "args": { "direction": "left"} } } },
	{ "keys": ["ctrl+alt+super+q"], "command": "bh_key", "args": {"lines": true, "plugin": {"type": ["single_quote", "double_quote", "py_single_quote", "py_double_quote"], "command": "bh_modules.swapquotes"} } },
	{ "keys": ["ctrl+alt+super+r"], "command": "bh_remove_brackets"},
	{ "keys": ["ctrl+alt+super+right"], "command": "bh_key", "args": {"plugin": {"type": ["cfml", "html", "angle"], "command": "bh_modules.tagattrselect", "args": { "direction": "right"} } } },
	{ "keys": ["ctrl+alt+super+s"], "no_outside_adj": null, "command": "bh_key", "args": {"lines": true, "plugin": {"type": ["__all__"], "command": "bh_modules.bracketselect"} } },
	{ "keys": ["ctrl+alt+super+t"], "command": "bh_key", "args": {"plugin": {"type": ["cfml", "html", "angle"], "command": "bh_modules.tagnameselect"} } },
	{ "keys": ["ctrl+alt+super+up"], "command": "bh_key", "args": {"no_outside_adj": null, "no_block_mode": null, "lines": true, "plugin": {"type": ["__all__"], "command": "bh_modules.bracketselect", "args": { "select": "left"} } } },
	{ "keys": ["ctrl+alt+super+v"], "command": "bh_toggle_high_visibility"},
	{ "keys": ["ctrl+alt+super+w"], "command": "wrap_brackets"},
	{ "keys": ["ctrl+alt+super+x"], "command": "bh_toggle_string_escape_mode"},
	{ "keys": ["ctrl+alt+up"], "command": "select_lines", "args": {"forward": false} },
	{ "keys": ["ctrl+b"], "command": "build" },
	{ "keys": ["ctrl+b"], "command": "toggle_bookmark"},
	{ "keys": ["ctrl+backspace"], "command": "delete_word", "args": { "forward": false } },
	{ "keys": ["ctrl+break"], "command": "cancel_build" },
	{ "keys": ["ctrl+c"], "command": "copy" },
	{ "keys": ["ctrl+context_menu"], "command": "menu_open_from_current_dir" },
	{ "keys": ["ctrl+d"], "command": "find_under_expand" },
	{ "keys": ["ctrl+delete"], "command": "delete_word", "args": { "forward": true } },
	{ "keys": ["ctrl+down"], "command": "scroll_lines", "args": {"amount": -1.0 } },
	{ "keys": ["ctrl+e"], "command": "slurp_find_string" },
	{ "keys": ["ctrl+end"], "command": "move_to", "args": {"to": "eof", "extend": false} },
	{ "keys": ["ctrl+enter"], "command": "chain", "args": { "commands": [["save"], ["build"]] } },
	{ "keys": ["ctrl+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line.sublime-macro"} },
	{ "keys": ["ctrl+equals"], "command": "increase_font_size" },
	{ "keys": ["ctrl+f"], "command": "show_panel", "args": {"panel": "find", "reverse": false} },
	{ "keys": ["ctrl+f2"], "command": "toggle_bookmark" },
	{ "keys": ["ctrl+f3"], "command": "find_under" },
	{ "keys": ["ctrl+f4"], "command": "close_file" },
	{ "keys": ["ctrl+f6"], "command": "next_misspelling" },
	{ "keys": ["ctrl+f9"], "command": "sort_lines", "args": {"case_sensitive": true} },
	{ "keys": ["ctrl+g"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
	{ "keys": ["ctrl+h"], "command": "show_panel", "args": {"panel": "replace", "reverse": false} },
	{ "keys": ["ctrl+home"], "command": "move_to", "args": {"to": "bof", "extend": false} },
	{ "keys": ["ctrl+i"], "command": "show_panel", "args": {"panel": "incremental_find", "reverse": false} },
	{ "keys": ["ctrl+insert"], "command": "copy" },
	{ "keys": ["ctrl+j"], "command": "join_lines" },
	{ "keys": ["ctrl+k", "ctrl+/"], "command": "toggle_inline_diff" },
	{ "keys": ["ctrl+k", "ctrl+0"], "command": "unfold_all" },
	{ "keys": ["ctrl+k", "ctrl+1"], "command": "fold_by_level", "args": {"level": 1} },
	{ "keys": ["ctrl+k", "ctrl+2"], "command": "fold_by_level", "args": {"level": 2} },
	{ "keys": ["ctrl+k", "ctrl+3"], "command": "fold_by_level", "args": {"level": 3} },
	{ "keys": ["ctrl+k", "ctrl+4"], "command": "fold_by_level", "args": {"level": 4} },
	{ "keys": ["ctrl+k", "ctrl+5"], "command": "fold_by_level", "args": {"level": 5} },
	{ "keys": ["ctrl+k", "ctrl+6"], "command": "fold_by_level", "args": {"level": 6} },
	{ "keys": ["ctrl+k", "ctrl+7"], "command": "fold_by_level", "args": {"level": 7} },
	{ "keys": ["ctrl+k", "ctrl+8"], "command": "fold_by_level", "args": {"level": 8} },
	{ "keys": ["ctrl+k", "ctrl+9"], "command": "fold_by_level", "args": {"level": 9} },
	{ "keys": ["ctrl+k", "ctrl+;"], "command": "toggle_inline_diff", "args": { "prefer_hide": true } },
	{ "keys": ["ctrl+k", "ctrl+a"], "command": "select_to_mark" },
	{ "keys": ["ctrl+k", "ctrl+b"], "command": "toggle_side_bar" },
	{ "keys": ["ctrl+k", "ctrl+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },
	{ "keys": ["ctrl+k", "ctrl+c"], "command": "show_at_center" },
	{ "keys": ["ctrl+k", "ctrl+d"], "command": "find_under_expand_skip" },
	{ "keys": ["ctrl+k", "ctrl+down"], "command": "close_pane" },
	{ "keys": ["ctrl+k", "ctrl+g"], "command": "clear_bookmarks", "args": {"name": "mark"} },
	{ "keys": ["ctrl+k", "ctrl+j"], "command": "unfold_all" },
	{ "keys": ["ctrl+k", "ctrl+k"], "command": "pass"},
	{ "keys": ["ctrl+k", "ctrl+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },
	{ "keys": ["ctrl+k", "ctrl+l"], "command": "lower_case" },
	{ "keys": ["ctrl+k", "ctrl+left"], "command": "focus_neighboring_group", "args": {"forward": false} },
	{ "keys": ["ctrl+k", "ctrl+right"], "command": "focus_neighboring_group" },
	{ "keys": ["ctrl+k", "ctrl+shift+left"], "command": "move_to_neighboring_group", "args": {"forward": false} },
	{ "keys": ["ctrl+k", "ctrl+shift+right"], "command": "move_to_neighboring_group" },
	{ "keys": ["ctrl+k", "ctrl+shift+up"], "command": "new_pane", "args": {"move": false} },
	{ "keys": ["ctrl+k", "ctrl+space"], "command": "set_mark" },
	{ "keys": ["ctrl+k", "ctrl+t"], "command": "fold_tag_attributes" },
	{ "keys": ["ctrl+k", "ctrl+u"], "command": "upper_case" },
	{ "keys": ["ctrl+k", "ctrl+up"], "command": "new_pane" },
	{ "keys": ["ctrl+k", "ctrl+v"], "command": "paste_from_history" },
	{ "keys": ["ctrl+k", "ctrl+w"], "command": "delete_to_mark" },
	{ "keys": ["ctrl+k", "ctrl+x"], "command": "swap_with_mark" },
	{ "keys": ["ctrl+k", "ctrl+y"], "command": "yank" },
	{ "keys": ["ctrl+k", "ctrl+z"], "command": "revert_modification" },
	{ "keys": ["ctrl+keypad0"], "command": "lsp_show_diagnostics_panel", },
	{ "keys": ["ctrl+keypad_minus"], "command": "decrease_font_size" },
	{ "keys": ["ctrl+keypad_plus"], "command": "increase_font_size" },
	{ "keys": ["ctrl+l"], "command": "expand_selection", "args": {"to": "line"} },
	{ "keys": ["ctrl+left"], "command": "move", "args": {"by": "words", "forward": false} },
	{ "keys": ["ctrl+m"], "command": "bh_key", "args": {"plugin": {"args": { "select": "right", "alternate": true }, "command": "bh_modules.bracketselect", "type": ["__all__"] }, "lines": true, "no_outside_adj": null } },
	{ "keys": ["ctrl+m"], "command": "move_to", "args": {"to": "brackets"} },
	{ "keys": ["ctrl+n"], "command": "new_file" },
	{ "keys": ["ctrl+o"], "command": "prompt_open_file" },
	{ "keys": ["ctrl+p"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
	{ "keys": ["ctrl+pagedown"], "command": "next_view" },
	{ "keys": ["ctrl+pageup"], "command": "prev_view" },
	{ "keys": ["ctrl+q"], "command": "toggle_record_macro" },
	{ "keys": ["ctrl+r"], "command": "lsp_document_symbols", "context": [{ "key": "setting.lsp_active"}] },
	{ "keys": ["ctrl+r"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },
	{ "keys": ["ctrl+right"], "command": "move", "args": {"by": "word_ends", "forward": true} },
	{ "keys": ["ctrl+s"], "command": "save" },
	{ "keys": ["ctrl+shift+/"], "command": "toggle_comment", "args": { "block": true } },
	{ "keys": ["ctrl+shift+1"], "command": "move_to_group", "args": { "group": 0 } },
	{ "keys": ["ctrl+shift+2"], "command": "move_to_group", "args": { "group": 1 } },
	{ "keys": ["ctrl+shift+3"], "command": "move_to_group", "args": { "group": 2 } },
	{ "keys": ["ctrl+shift+4"], "command": "move_to_group", "args": { "group": 3 } },
	{ "keys": ["ctrl+shift+5"], "command": "move_to_group", "args": { "group": 4 } },
	{ "keys": ["ctrl+shift+6"], "command": "move_to_group", "args": { "group": 5 } },
	{ "keys": ["ctrl+shift+7"], "command": "move_to_group", "args": { "group": 6 } },
	{ "keys": ["ctrl+shift+8"], "command": "move_to_group", "args": { "group": 7 } },
	{ "keys": ["ctrl+shift+9"], "command": "move_to_group", "args": { "group": 8 } },
	{ "keys": ["ctrl+shift+["], "command": "fold" },
	{ "keys": ["ctrl+shift+\\"], "command": "toggle_inline_diff", "args": { "prefer_hide": true } },
	{ "keys": ["ctrl+shift+]"], "command": "unfold" },
	{ "keys": ["ctrl+shift+`"], "command": "diff_changes"},
	{ "keys": ["ctrl+shift+a"], "command": "expand_selection", "args": {"to": "tag"} },
	{ "keys": ["ctrl+shift+b"], "command": "build", "args": {"select": true} },
	{ "keys": ["ctrl+shift+backspace"], "command": "left_delete" },
	{ "keys": ["ctrl+shift+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },
	{ "keys": ["ctrl+shift+d"], "command": "duplicate_line" },
	{ "keys": ["ctrl+shift+delete"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },
	{ "keys": ["ctrl+shift+down"], "command": "move", "args": { "by": "lines", "forward": true, "extend": true } },
	{ "keys": ["ctrl+shift+down"], "command": "swap_line_down" },
	{ "keys": ["ctrl+shift+e"], "command": "slurp_replace_string" },
	{ "keys": ["ctrl+shift+end"], "command": "move_to", "args": {"to": "eof", "extend": true} },
	{ "keys": ["ctrl+shift+enter"], "command": "cancel_build"},
	{ "keys": ["ctrl+shift+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line Before.sublime-macro"} },
	{ "keys": ["ctrl+shift+equals"], "command": "decrease_font_size" },
	{ "keys": ["ctrl+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files", "where": "C:\\Users\\Ibraheem\\Desktop\\SublimeText,*.py"}, "context": [{ "key": "selector", "operator": "equal", "operand": "source.python"} ] },
	{ "keys": ["ctrl+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files", "where": "C:\\Users\\Ibraheem\\Desktop\\Unity Projects\\,*/Assets/*.cs,-*/Assets/*/*.cs"}, "context": [{ "key": "selector", "operator": "equal", "operand": "source.cs"} ] },
	{ "keys": ["ctrl+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },
	{ "keys": ["ctrl+shift+f2"], "command": "clear_bookmarks" },
	{ "keys": ["ctrl+shift+f3"], "command": "find_under_prev" },
	{ "keys": ["ctrl+shift+f6"], "command": "prev_misspelling" },
	{ "keys": ["ctrl+shift+h"], "command": "replace_next" },
	{ "keys": ["ctrl+shift+home"], "command": "move_to", "args": {"to": "bof", "extend": true} },
	{ "keys": ["ctrl+shift+i"], "command": "show_panel", "args": {"panel": "incremental_find", "reverse": true} },
	{ "keys": ["ctrl+shift+j"], "command": "expand_selection", "args": {"to": "indentation"} },
	{ "keys": ["ctrl+shift+k"], "command": "pass"},
	{ "keys": ["ctrl+shift+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Line.sublime-macro"} },
	{ "keys": ["ctrl+shift+keypad_plus"], "command": "decrease_font_size" },
	{ "keys": ["ctrl+shift+l"], "command": "split_selection_into_lines" },
	{ "keys": ["ctrl+shift+left"], "command": "move", "args": {"by": "words", "forward": false, "extend": true} },
	{ "keys": ["ctrl+shift+m"], "command": "expand_selection", "args": {"to": "brackets"} },
	{ "keys": ["ctrl+shift+n"], "command": "chain", "context": [{ "key": "selector", "operator": "equal", "operand": "source.c++"} ], "args": {"commands": [["new_file"], ["insert_snippet", { "name": "Packages/User/Snippets/CppDefault.sublime-snippet"} ], ["set_file_type", { "syntax": "Packages/C++/C++.sublime-syntax"}] ] } },
	{ "keys": ["ctrl+shift+n"], "command": "new_window" },
	{ "keys": ["ctrl+shift+n"], "command": "new_window"},
	{ "keys": ["ctrl+shift+o"], "command": "open_in_browser"},
	{ "keys": ["ctrl+shift+p"], "command": "show_overlay", "args": {"overlay": "command_palette"} },
	{ "keys": ["ctrl+shift+q"], "command": "run_macro" },
	{ "keys": ["ctrl+shift+r"], "command": "goto_symbol_in_project" },
	{ "keys": ["ctrl+shift+right"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true} },
	{ "keys": ["ctrl+shift+s"], "command": "prompt_save_as" },
	{ "keys": ["ctrl+shift+space"], "command": "expand_selection", "args": {"to": "scope"} },
	{ "keys": ["ctrl+shift+space"], "command": "lsp_hover", "context": [{ "key": "setting.lsp_active"}] },
	{ "keys": ["ctrl+shift+t"], "command": "reopen_last_file" },
	{ "keys": ["ctrl+shift+tab"], "command": "prev_view_in_stack" },
	{ "keys": ["ctrl+shift+u"], "command": "soft_redo" },
	{ "keys": ["ctrl+shift+up"], "command": "move", "args": { "by": "lines", "forward": false, "extend": true } },
	{ "keys": ["ctrl+shift+up"], "command": "swap_line_up" },
	{ "keys": ["ctrl+shift+v"], "command": "paste_and_indent" },
	{ "keys": ["ctrl+shift+w"], "command": "close_window" },
	{ "keys": ["ctrl+shift+w"], "command": "destroy_pane", "args": { "direction": "self"} },
	{ "keys": ["ctrl+shift+z"], "command": "redo" },
	{ "keys": ["ctrl+space"], "command": "auto_complete" },
	{ "keys": ["ctrl+space"], "command": "expand_region", "args": { "debug": false } },
	{ "keys": ["ctrl+space"], "command": "replace_completion_with_auto_complete", "context": [{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" }, { "key": "auto_complete_visible", "operator": "equal", "operand": false }, { "key": "setting.tab_completion", "operator": "equal", "operand": true } ] },
	{ "keys": ["ctrl+t"], "command": "run_macro_file", "args": { "file": "Packages/User/Macros/extendedtranspose.sublime-macro"} },
	{ "keys": ["ctrl+t"], "command": "transpose" },
	{ "keys": ["ctrl+tab"], "command": "next_view_in_stack" },
	{ "keys": ["ctrl+u"], "command": "soft_undo" },
	{ "keys": ["ctrl+up"], "command": "scroll_lines", "args": {"amount": 1.0 } },
	{ "keys": ["ctrl+v"], "command": "paste" },
	{ "keys": ["ctrl+w"], "command": "chain", "context": [{"key": "selector", "operator": "equal", "operand": "source.assembly"} ], "args": { "commands": [["delete_assembly_stuff"], ["safe_close"]] } },
	{ "keys": ["ctrl+w"], "command": "close" },
	{ "keys": ["ctrl+w"], "command": "safe_close"},
	{ "keys": ["ctrl+x"], "command": "cut" },
	{ "keys": ["ctrl+y"], "command": "redo_or_repeat" },
	{ "keys": ["ctrl+z"], "command": "undo" },
	{ "keys": ["delete"], "command": "right_delete" },
	{ "keys": ["down"], "command": "move", "args": {"by": "lines", "forward": true} },
	{ "keys": ["end"], "command": "move_to", "args": {"to": "eol", "extend": false} },
	{ "keys": ["enter"], "command": "auto_indent_tag", "context": [{ "key": "setting.auto_indent", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true }, ] },
	{ "keys": ["enter"], "command": "commit_completion", "context": [{ "key": "auto_complete_visible" }, { "key": "setting.auto_complete_commit_on_tab", "operand": false } ] },
	{ "keys": ["enter"], "command": "find_next", "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}] },
	{ "keys": ["enter"], "command": "find_next", "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
	{ "keys": ["enter"], "command": "hide_panel", "context": [{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}] },
	{ "keys": ["enter"], "command": "insert", "args": {"characters": "\n"} },
	{ "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context": [{ "key": "setting.auto_indent", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true } ] },
	{ "keys": ["escape"], "command": "clear_fields", "context": [{ "key": "has_next_field", "operator": "equal", "operand": true } ] },
	{ "keys": ["escape"], "command": "clear_fields", "context": [{ "key": "has_next_field", "operator": "equal", "operand": true }, { "key": "panel_visible", "operator": "equal", "operand": true }, { "key": "panel_has_focus", "operator": "equal", "operand": false } ] },
	{ "keys": ["escape"], "command": "clear_fields", "context": [{ "key": "has_prev_field", "operator": "equal", "operand": true } ] },
	{ "keys": ["escape"], "command": "clear_fields", "context": [{ "key": "has_prev_field", "operator": "equal", "operand": true }, { "key": "panel_visible", "operator": "equal", "operand": true }, { "key": "panel_has_focus", "operator": "equal", "operand": false } ] },
	{ "keys": ["escape"], "command": "hide_auto_complete", "context": [{ "key": "auto_complete_visible", "operator": "equal", "operand": true } ] },
	{ "keys": ["escape"], "command": "hide_overlay", "context": [{ "key": "overlay_visible", "operator": "equal", "operand": true } ] },
	{ "keys": ["escape"], "command": "hide_panel", "args": {"cancel": true}, "context": [{ "key": "panel_visible", "operator": "equal", "operand": true } ] },
	{ "keys": ["escape"], "command": "hide_popup", "context": [{ "key": "popup_visible", "operator": "equal", "operand": true } ] },
	{ "keys": ["escape"], "command": "lsp_hide_diagnostic", "context": [{ "key": "setting.lsp_diagnostic_phantom"}] },
	{ "keys": ["escape"], "command": "pass", "context": [{ "key": "terminus_view"}, { "key": "panel_visible", "operator": "equal", "operand": true }, { "key": "panel_has_focus", "operator": "equal", "operand": false }, { "key": "num_selections", "operator": "equal", "operand": 1 }, { "key": "has_next_field", "operator": "equal", "operand": false }, { "key": "has_prev_field", "operator": "equal", "operand": false }, { "key": "overlay_visible", "operator": "equal", "operand": false }, { "key": "popup_visible", "operator": "equal", "operand": false }, {"key": "auto_complete_visible", "operator": "equal", "operand": false } ] },
	{ "keys": ["escape"], "command": "single_selection", "context": [{ "key": "num_selections", "operator": "not_equal", "operand": 1 } ] },
	{ "keys": ["escape"], "command": "single_selection", "context": [{ "key": "num_selections", "operator": "not_equal", "operand": 1 }, { "key": "panel_visible", "operator": "equal", "operand": true }, { "key": "panel_has_focus", "operator": "equal", "operand": false } ] },
	{ "keys": ["f11"], "command": "toggle_full_screen" },
	{ "keys": ["f12"], "command": "goto_definition" },
	{ "keys": ["f2"], "command": "next_bookmark" },
	{ "keys": ["f3"], "command": "find_next" },
	{ "keys": ["f4"], "command": "next_result" },
	{ "keys": ["f6"], "command": "toggle_setting", "args": {"setting": "spell_check"} },
	{ "keys": ["f7"], "command": "build" },
	{ "keys": ["f8"], "command": "lsp_next_diagnostic", "context": [{ "key": "setting.lsp_active"}] },
	{ "keys": ["f9"], "command": "sort_lines", "args": {"case_sensitive": false} },
	{ "keys": ["home"], "command": "move_to", "args": {"to": "bol", "extend": false} },
	{ "keys": ["insert", "insert"], "command": "toggle_overwrite"},
	{ "keys": ["insert"], "command": "toggle_overwrite" },
	{ "keys": ["left"], "command": "move", "args": {"by": "characters", "forward": false} },
	{ "keys": ["pagedown"], "command": "move", "args": {"by": "pages", "forward": true} },
	{ "keys": ["pageup"], "command": "move", "args": {"by": "pages", "forward": false} },
	{ "keys": ["right"], "command": "move", "args": {"by": "characters", "forward": true} },
	{ "keys": ["shift+backspace"], "command": "left_delete" },
	{ "keys": ["shift+context_menu"],	"command": "menu_toggle_preferences"	},
	{ "keys": ["shift+delete"], "command": "cut" },
	{ "keys": ["shift+down"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true} },
	{ "keys": ["shift+end"], "command": "move_to", "args": {"to": "eol", "extend": true} },
	{ "keys": ["shift+enter"], "command": "auto_indent_tag", "context": [{ "key": "setting.auto_indent", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true }, ] },
	{ "keys": ["shift+enter"], "command": "find_prev", "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}] },
	{ "keys": ["shift+enter"], "command": "find_prev", "context": [{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}] },
	{ "keys": ["shift+enter"], "command": "find_prev", "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}] },
	{ "keys": ["shift+enter"], "command": "insert", "args": {"characters": "\n"} },
	{ "keys": ["shift+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context": [{ "key": "setting.auto_indent", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true } ] },
	{ "keys": ["shift+escape"], "command": "chain", "context": [{ "key": "panel_visible", "operator": "equal", "operand": true }, { "key": "terminus_view"} ], "args": {"commands": [["terminus_close"], ["hide_panel", { "cancel": true }]] } },
	{ "keys": ["shift+f11"], "command": "toggle_distraction_free" },
	{ "keys": ["shift+f12"], "command": "goto_reference" },
	{ "keys": ["shift+f12"], "command": "lsp_symbol_references", "context": [{ "key": "setting.lsp_active"}] },
	{ "keys": ["shift+f2"], "command": "prev_bookmark" },
	{ "keys": ["shift+f3"], "command": "find_prev" },
	{ "keys": ["shift+f4"], "command": "prev_result" },
	{ "keys": ["shift+f8"], "command": "lsp_previous_diagnostic", "context": [{ "key": "setting.lsp_active"}] },
	{ "keys": ["shift+home"], "command": "move_to", "args": {"to": "bol", "extend": true} },
	{ "keys": ["shift+insert"], "command": "paste" },
	{ "keys": ["shift+left"], "command": "move", "args": {"by": "characters", "forward": false, "extend": true} },
	{ "keys": ["shift+pagedown"], "command": "move", "args": {"by": "pages", "forward": true, "extend": true} },
	{ "keys": ["shift+pageup"], "command": "move", "args": {"by": "pages", "forward": false, "extend": true} },
	{ "keys": ["shift+right"], "command": "move", "args": {"by": "characters", "forward": true, "extend": true} },
	{ "keys": ["shift+space"], "command": "noop", "context": [{ "key": "lsp.signature_help", "operator": "equal", "operand": 0 } ] },
	{ "keys": ["shift+tab"], "command": "insert", "args": {"characters": "\t"} },
	{ "keys": ["shift+tab"], "command": "prev_field", "context": [{ "key": "has_prev_field", "operator": "equal", "operand": true } ] },
	{ "keys": ["shift+tab"], "command": "unindent", "context": [{ "key": "preceding_text", "operator": "regex_match", "operand": "^[\t ]*" } ] },
	{ "keys": ["shift+tab"], "command": "unindent", "context": [{ "key": "setting.shift_tab_unindent", "operator": "equal", "operand": true } ] },
	{ "keys": ["shift+tab"], "command": "unindent", "context": [{ "key": "text", "operator": "regex_contains", "operand": "\n" } ] },
	{ "keys": ["shift+up"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true} },
	{ "keys": ["super+\\"], "command": "open_key_bindings"},
	{ "keys": ["super+`"], "command": "toggle_terminus_panel", "args": {"cwd": "${file_path:${folder}}", "panel_name": "Windows Terminal"} },
	{ "keys": ["super+alt+,"], "command": "pane_pane_resize", "args": { "dimension": "width", "resize": "decrease"} },
	{ "keys": ["super+alt+."], "command": "pane_pane_resize", "args": { "dimension": "width", "resize": "increase"} },
	{ "keys": ["super+alt+c"], "command": "super_calculator"},
	{ "keys": ["super+alt+down"], "command": "swap_down_with_indent_always"},
	{ "keys": ["super+alt+shift+,"], "command": "pane_pane_resize", "args": { "dimension": "height", "resize": "decrease"} },
	{ "keys": ["super+alt+shift+."], "command": "pane_pane_resize", "args": { "dimension": "height", "resize": "increase"} },
	{ "keys": ["super+alt+up"], "command": "swap_up_with_indent_always"},
	{ "keys": ["super+context_menu"], "command": "show_overlay", "args": { "overlay": "command_palette", "text": "Terminus Op"} },
	{ "keys": ["super+ctrl+alt+enter"], "command": "send_code", "context": [{ "key": "selector", "operator": "equal", "operand": "source.r"}, { "key": "selector", "operator": "equal", "operand": "source.python"} ] },
	{ "keys": ["super+delete"], "command": "bh_key","args": {"plugin":  {"type": ["__all__"], "command": "bh_modules.bracketremove", "args": {"remove_indent": false, "remove_block": false, "remove_content": false } } } },
	{ "keys": ["super+shift+\\"], "command": "edit_settings", "args": {"base_file": "${packages}/Default/Default ($platform).sublime-keymap", "default": "[\n\t$0\n]\n"} },
	{ "keys": ["super+shift+`"], "command": "terminus_open", "args": {"cwd": "${file_path:${folder}}", "panel_name": "Windows Terminal"} },
	{ "keys": ["super+shift+delete"], "command": "bh_remove_brackets"},
	{ "keys": ["super+shift+j"], "command": "run_jupyter"},
	{ "keys": ["super+shift+z"], "command": "toggle_zoom_pane", "args": { "fraction": 0.8 } },
	{ "keys": ["tab"], "command": "anaconda_fill_funcargs", "context": [{ "key": "selector", "operator": "equal", "operand": "source.python"}, { "key": "anaconda_insert_funcargs"} ] },
	{ "keys": ["tab"], "command": "commit_completion", "context": [{ "key": "auto_complete_visible" }, { "key": "setting.auto_complete_commit_on_tab" } ] },
	{ "keys": ["tab"], "command": "indent", "context": [{ "key": "text", "operator": "regex_contains", "operand": "\n" } ] },
	{ "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false}, "context": [{ "key": "setting.tab_completion", "operator": "equal", "operand": true }, { "key": "preceding_text", "operator": "not_regex_match", "operand": ".*\\b[0-9]+$", "match_all": true }, ] },
	{ "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": true} },
	{ "keys": ["tab"], "command": "next_field", "context": [{ "key": "has_next_field", "operator": "equal", "operand": true } ] },
	{ "keys": ["tab"], "command": "reindent", "context": [{ "key": "setting.auto_indent", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_match", "operand": "^$", "match_all": true }, { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true } ] },
	{ "keys": ["tab"], "command": "replace_completion_with_next_completion", "context": [{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" }, { "key": "setting.tab_completion", "operator": "equal", "operand": true } ] },
	{ "keys": ["up"], "command": "move", "args": {"by": "lines", "forward": false} },
	{ "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{$0}"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true } ] },
	{ "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{${0:$SELECTION}}"}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true } ] },
	{ "keys": ["{"], "command": "wrap_block", "args": {"begin": "{", "end": "}"}, "context": [{ "key": "indented_block", "match_all": true }, { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true }, ] },
	{ "keys": ["}"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true } ] },
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
]
